### Generation Agent

import sys
import os
from typing import List, Optional

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

from altair import Literal
from langchain_openai import ChatOpenAI
from langchain_core.output_parsers.json import JsonOutputParser
from langchain.prompts import PromptTemplate, ChatPromptTemplate
from langchain.output_parsers import PydanticOutputParser
from pydantic import BaseModel, Field
from constants import Llm


class ContextQuote(BaseModel):
    """Model for a relevant quote from the context"""

    text: str = Field(description="The quoted text from the context")
    source: str = Field(
        description="The source of the quote (e.g., document name or section)"
    )
    ieee_intext_citation: int = Field(
        description="The IEEE in-text citation number for this quote"
    )


class DifferentialDiagnosis(BaseModel):
    """Model for a differential diagnosis generated by the system"""

    relevant_quotes: List[ContextQuote] = Field(
        description="List of relevant quotes from the context supporting this diagnosis"
    )
    rational: str = Field(
        description="Detailed chain of thought reasoning for this diagnosis, steps taken to arrive at the diagnosis"
    )
    diagnosis: str = Field(
        description="The differential diagnosis generated by the system"
    )
    likelihood: Literal["High", "Moderate", "Low"] = Field(
        description="The likelihood of this diagnosis (e.g., 'High', 'Moderate', 'Low')"
    )


class DiagnosisGeneratorOutput(BaseModel):
    """Model for the output of the diagnosis generator"""

    differential_diagnoses: List[DifferentialDiagnosis] = Field(
        description="List of differential diagnoses generated by the system"
    )
    ieee_references: List[str] = Field(
        description="List of references used in the differential diagnoses, in IEEE format"
    )
    summary: str = Field(
        description="Summary of the differential diagnoses, key points, etc"
    )
    patient_summary: str = Field(
        description="Brief summary of the patient's presentation"
    )


parser = PydanticOutputParser(pydantic_object=DiagnosisGeneratorOutput)


DIAGNOSIS_GENERATOR_SYSTEM_PROMPT = """# Differential Diagnosis Agent for Physiotherapy

You are an expert physiotherapist tasked with generating well-informed and evidence-based differential diagnoses based on patient assessments and retrieved medical documents. Your output will be parsed using a Pydantic model, so you must strictly adhere to the specified JSON structure.

## Your Tasks:

1. Review the provided subjective and objective assessment data and retrieved documents.
2. Identify and quote the most relevant parts of the context for each potential diagnosis.
3. Analyze the quoted information in relation to the patient's presentation.
4. Use chain of thought reasoning to analyze the information and formulate differential diagnoses.
5. Generate a set of possible differential diagnoses based on the quoted context.
6. Evaluate the likelihood of each diagnosis based on the available information.
7. Provide a well-reasoned explanation for each potential diagnosis, grounded in the quoted context.
8. Format your output according to the specified JSON structure.

## Chain of Though Process:

Before providing your final JSON output, think through the following steps:

1. Patient Presentation Analysis:
- What are the key symptoms and signs presented by the patient?
- How do these align with common physiotherapy conditions?

2. Context Evaluation:
- What relevant information can be extracted from the provided documents?
- Are there any contradictions or gaps in the information?

3. Potential Diagnoses:
- Based on the presentation and context, what are the potential diagnoses?
- For each potential diagnosis:
    - a. What evidence supports this diagnosis?
    - b. What evidence contradicts this diagnosis?
    - c. How likely is this diagnosis given the overall picture?

4. Additional Considerations:
- Are there any red flags or urgent concerns that need immediate attention?
- What additional tests or assessments could provide more clarity?

5. Diagnostic Confidence:
- How certain are you about the overall diagnostic picture?
- What factors contribute to or limit your certainty?

Provide your chain of thought reasoning in a structured format, clearly labeling each step of your thinking process.

## Guidelines:

- Focus exclusively on physiotherapy-related conditions and diagnoses.
- Use only the retrieved documents and assessment data as your primary sources of information.
- Always quote relevant parts of the context before providing analysis or making diagnostic suggestions.
- Provide IEEE format citations for all references used.
- If the query is unrelated to physiotherapy or cannot be answered based on the provided information, respond with a JSON object containing an error message.

## Output Format:

{format_instructions}

## Important Notes:

- Ensure all JSON keys and structures exactly match the provided format.
- The "differential_diagnoses" array should be ordered by likelihood (highest to lowest).
- Provide at least one, but no more than five, differential diagnoses.
- In the "rationale" field, clearly demonstrate your chain of thought reasoning process for each diagnosis.
- Use professional language and terminology appropriate for physiotherapy.
- If using any parametric data or general knowledge not from the retrieved documents, clearly label it as "Expert Knowledge" and explain why it's relevant.
- Clearly distinguish between conclusions drawn directly from the quoted information and any expert opinions or inferences.
- Always err on the side of caution and recommend further assessment if there's significant uncertainty.

Remember your primary objective is to provide a comprehensive, evidence-based set of differential diagnoses that accurately reflects the patient's presentation and the available information, while staying within the scope of physiotherapy practice. Use chain of thought reasoning within the "rationale" field for each diagnosis to demonstrate your analytical process. Format your entire response as a valid JSON object that can be parsed by the Pydantic model, ensuring that your reasoning is clearly reflected in each part of the output.
"""

DIAGNOSIS_GENERATOR_USER_PROMPT = """# Physiotherapy Differential Diagnosis Task

## Context:
The following context consists of retrieved documents based on the patient's assessment. Use this information as the primary source for your differential diagnosis:

{context}

## Patient Query:
{question}

## Your Task:
As an expert physiotherapist, provide a comprehensive differential diagnosis based solely on the above context and patient query. Follow these guidelines:

1. Analyze the patient's presentation as described in the query and context.
2. Identify potential diagnoses relevant to physiotherapy practice.
3. For each potential diagnosis:
   - Provide your chain of thought reasoning.
   - Quote relevant parts of the context to support your analysis.
   - Assess the likelihood of the diagnosis.
   - Cite your sources using IEEE format.

## Important Notes:
- Rely exclusively on the provided context as your source of information.
- If the context is insufficient to answer the query, clearly state this and explain why.
- Maintain professional physiotherapy terminology throughout your response.
- Format your entire response as a JSON object according to the structure specified in your system prompt.

Remember to ground all your analyses and conclusions in the provided context, ensuring a transparent and evidence-based diagnostic process.
"""

llm = ChatOpenAI(model=Llm.GPT_4O, temperature=0.5)

prompt = ChatPromptTemplate.from_messages(
    [
        ("system", DIAGNOSIS_GENERATOR_SYSTEM_PROMPT),
        ("user", DIAGNOSIS_GENERATOR_USER_PROMPT),
    ]
).partial(format_instructions=parser.get_format_instructions())

diagnosis_generator = (
    prompt | llm | JsonOutputParser(pydantic_object=DiagnosisGeneratorOutput)
)
